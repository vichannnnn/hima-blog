---
version: '3.8'

services:
  frontend:
    container_name: hima-blog-frontend
    networks:
      - hima-blog-network
      - default
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - '80:80'
      - '443:443'
      - '8000:8000'
      - '8001:8001'
      - '5173:5173'
    environment:
      BACKEND_URL: ${BACKEND_URL}
      BACKEND_CONTAINER_URL: ${BACKEND_CONTAINER_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      FRONTEND_CONTAINER_URL: ${FRONTEND_CONTAINER_URL}
      DEBUG_URL: ${DEBUG_URL}
      DEBUG_CONTAINER_URL: ${DEBUG_CONTAINER_URL}
      IMAGE_URL: ${IMAGE_URL}
      VITE_API_URL: ${VITE_API_URL}
      VITE_IMAGE_VOLUME_URL: ${VITE_IMAGE_VOLUME_URL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - blog-assets-volume:/srv
      - caddy_data:/data
      - caddy_config:/config
    restart:
      unless-stopped

  backend:
    depends_on:
      - db
    container_name: hima-blog-backend
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - hima-blog-network
      - default
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      DATABASE_URL: ${DATABASE_URL}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      ALGORITHM: ${ALGORITHM}
      SECRET_KEY: ${SECRET_KEY}
      BACKEND_URL: ${BACKEND_URL}
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - blog-assets-volume:/app/images

  db:
    container_name: hima-blog-db
    networks:
      - hima-blog-network
      - default
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      interval: 5s
      retries: 10
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
    image: postgres:14.1-alpine
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/

volumes:
  blog-assets-volume:
  caddy_config: null
  caddy_data: null

networks:
  hima-blog-network:
    name: hima-blog-network
    driver: bridge

